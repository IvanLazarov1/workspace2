//============================================================================
// Name        : UniversitySistem.cpp
// Author      : ty
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>

#include "University.h"


using namespace std;
//Изпращам една задача по материала за кокмпозиция, вектор и класове.
//Това е задача за упражнение, не е домашно.

//Ако не успеете да реализирате логиката на даден метод, прескочете я,
//и само обявете метода в хедъра и cpp-то, с нужните параметри (ако има такива) и тип.
//В случая е по-важно да видите/реализирате взаимовръзкте между отделните класове и организацията на класовете,
//вместо някаква конкретна логика как точно се смята нещо.
//
//Да се направи система за университет (клас Университет).
//В системата се поддържа списък (вектор) от студенти
//и списък (вектор) от преподаватели.
//В клас Университет да се реализират операции (методи) по :
//- добавяне на студент към списъка
//- добавяне на преподавател към списъка
//- търсене на студент по име и извеждане на информацията за него
//- извеждане на броя на студентите с успех над 5.00
//- извеждане на информация за преподавателите със стаж над 5 години.
//- извеждане на информация за преподавателите със стаж над 3 години за конктретен предмет

//За всеки студент (клас Студент) се пази - име, егн, масив/вектор от 10 оценки

//За всеки преподавател (клас Преподавател) се пази - име, предмет, егн, стаж

//Допълнителни изисквания: при добавяне на студент/преподавател към съответния списък,
//да се проверява да не се добавят повторно студент/преподавател, които са вече в списъците.
//Тази проверка да става по егн.

//Да се реализира и драйвер (това е main метода) където да се изтестват основните функционалностти.

//Съвет: започнете от класа на Преподавателя и Студента, после Университета.
//Като направите даден клас - изтеди да продължствайте го в мейн, преите нататък.
//Университета го реализирайте стъпка по стъпка - първо единия вектор и добаването на обекти в него,
//тествате го, после другия, тествате и него. После една по една другите операции,
//като всяка като я завършите я тествате.

int main() {

	University uni1;

	uni1.addStudents("Gosho", "Peshev", 8901025487);
	uni1.addStudentGrade("Gosho", "Peshev", 6);
	uni1.addStudentGrade("Gosho", "Peshev", 5);
	uni1.addStudentGrade("Gosho", "Peshev", 6);

	uni1.addStudents("Pesho", "Goshev", 89302025843);
	uni1.addStudentGrade("Pesho", "Goshev", 4);
	uni1.addStudentGrade("Pesho", "Goshev", 3);
	uni1.addStudentGrade("Pesho", "Goshev", 5);

//	uni1.addStudents("Sasho", "Sashev", 89302025843); // egn chek

	uni1.addTeachers("Daskal", "Daskalov", "Himiq", 5803065214, 6);
	uni1.addTeachers("Katya", "Daskalova", "c++", 7506054785, 4);

//	cout << uni1.getTopStudents();
//	uni1.getFiveYearTeacher();
//	uni1.getThreeYearAndSubject("c++");
//	uni1.searchStudent("Pesho", "Goshev");






	return 0;
}
